package main

import (
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"strings"
)

// Reads all .json files in the current folder
// and encodes them as strings literals in textfiles.go

// need to escape the backtick...
type filter struct {
	w io.Writer
}

func (f *filter) Write(p []byte) (int, error) {
	escaped := strings.Replace(string(p), "`", "'", -1)
	if _, err := f.w.Write([]byte(escaped)); err != nil {
		return 0, err
	}
	return len(p), nil
}

func main() {
	fs, _ := ioutil.ReadDir(".")
	out, _ := os.Create("swagger.pb.go")

	out.WriteString("// code generated by includetxt.go\n")
	out.WriteString("// DO NOT EDIT!\n\n")

	out.Write([]byte("package protobuf \n\nconst (\n"))
	for _, f := range fs {
		if strings.HasSuffix(f.Name(), ".json") {
			name := strings.TrimPrefix(f.Name(), "sgms.")
			fmt.Println("includetxt: name=", name)
			out.Write([]byte(strings.TrimSuffix(name, ".json") + " = `"))
			f, _ := os.Open(f.Name())
			io.Copy(&filter{out}, f)
			out.Write([]byte("`\n"))
		}
	}
	out.Write([]byte(")\n"))
}
